CREATE TEMPORARY TABLE tmp_sku (
    sku VARCHAR(128) NOT NULL,
    entity_id INTEGER NOT NULL,
    type_id VARCHAR(32) NOT NULL,
    PRIMARY KEY (sku),
    UNIQUE INDEX (entity_id)
)
SELECT
       product.sku,
       product.entity_id,
       product.type_id
FROM catalog_product_entity AS product
WHERE product.sku IS NOT NULL;

CREATE TEMPORARY TABLE tmp_options (
    option_id INTEGER NOT NULL,
    code VARCHAR(256) NOT NULL,
    short_code VARCHAR(256) NOT NULL,
    attribute VARCHAR(128) NOT NULL,
    sort_order INTEGER NOT NULL,
    PRIMARY KEY (option_id),
    INDEX (code, attribute),
    INDEX (attribute)
)
SELECT
       opt_value_default.option_id,
       SUBSTRING(CONCAT(
           codes.code,
           '_',
           REPLACE(
               REPLACE(
                   REPLACE(
                       REPLACE(
                           REPLACE(
                               REPLACE(
                                   REPLACE(
                                       REPLACE(
                                           REPLACE(
                                               REPLACE(
                                                   REPLACE(
                                                       REPLACE(
                                                           LOWER(opt_value_default.value),
                                                           '"',
                                                           'inches'
                                                       ),
                                                       'â',
                                                       'a'
                                                   ),
                                                   'è',
                                                   'e'
                                               ),
                                               'é',
                                               'e'
                                           ),
                                           '/',
                                           '_'
                                       ),
                                       '.',
                                       '_'
                                   ),
                                   ' ',
                                   '_'
                               ),
                               ',',
                               '_'
                           ),
                           ')',
                           ''
                       ),
                       '(',
                       ''
                   ),
                   '+',
                   '_plus'
               ),
               '_x_',
               'x'
           )
       ), 1, 100) AS code,
       SUBSTRING(REPLACE(
           REPLACE(
               REPLACE(
                   REPLACE(
                       REPLACE(
                           REPLACE(
                               REPLACE(
                                   REPLACE(
                                       REPLACE(
                                           REPLACE(
                                               REPLACE(
                                                   REPLACE(
                                                       LOWER(opt_value_default.value),
                                                       '"',
                                                       'inches'
                                                   ),
                                                   'â',
                                                   'a'
                                               ),
                                               'è',
                                               'e'
                                           ),
                                           'é',
                                           'e'
                                       ),
                                       '/',
                                       '_'
                                   ),
                                   '.',
                                   '_'
                               ),
                               ' ',
                               '_'
                           ),
                           ',',
                           '_'
                       ),
                       ')',
                       ''
                   ),
                   '(',
                   ''
               ),
               '+',
               '_plus'
           ),
           '_x_',
           'x'
       ), 1, 99 - LENGTH(codes.code)) AS short_code,
       attribute.attribute_code AS attribute,
       opt.sort_order AS sort_order

FROM ({{ attributes|map(attribute => "SELECT '#{ attribute.codeInSource }'")|join(' UNION ')|raw }}) AS codes
INNER JOIN eav_attribute AS attribute
    ON codes.code = attribute.attribute_code
INNER JOIN eav_attribute_option AS opt
    ON opt.attribute_id=attribute.attribute_id
INNER JOIN eav_attribute_option_value AS opt_value_default
    ON opt_value_default.option_id=opt.option_id
    AND opt_value_default.store_id=0;

{% for axis in axises %}
CREATE TEMPORARY TABLE {{ as_field_table(axis) }} (
    entity_id INTEGER NOT NULL,
    code VARCHAR(256) NOT NULL,
    short_code VARCHAR(256) NOT NULL,
    PRIMARY KEY (entity_id, code),
    INDEX (code)
)
SELECT
    {{ as_default_alias() }}.entity_id,
    {{ as_default_alias() }}_option.short_code AS short_code,
    {{ as_default_alias() }}_option.code AS code
FROM eav_attribute AS attribute
INNER JOIN catalog_product_entity_int AS {{ as_default_alias() }}
    ON {{ as_default_alias() }}.attribute_id=attribute.attribute_id
INNER JOIN tmp_options AS {{ as_default_alias() }}_option
    ON {{ as_default_alias() }}_option.attribute = attribute.attribute_code
    AND {{ as_default_alias() }}.value={{ as_default_alias() }}_option.option_id
WHERE attribute.attribute_code = '{{ attribute.codeInSource }}'
  AND attribute.entity_type_id = 4
  AND attribute.attribute_id={{ as_default_alias() }}.attribute_id
  AND {{ as_default_alias() }}.store_id = 0;
{% endfor %}

{#CREATE TEMPORARY TABLE tmp_hierarchy (#}
{#    parent VARCHAR(128) NOT NULL,#}
{#    child VARCHAR(128) NOT NULL,#}
{#    variant VARCHAR(128) NOT NULL,#}
{#    color VARCHAR(128) NULL,#}
{#    capacity VARCHAR(128) NULL,#}
{#    PRIMARY KEY (parent, child, variant),#}
{#    INDEX (parent),#}
{#    INDEX (child),#}
{#    INDEX (variant)#}
{#)#}
{#SELECT#}
{#    product.sku AS parent,#}
{#    CONCAT(product.sku{%- for axis in axises -%}, ':', {{ as_field_alias(axis) }}.short_code{%- endfor -%}) AS child,#}
{#{%- for axis in axises -%}#}
{#    {{ as_field_alias(axis) }}.code AS `{{ attribute.codeInDestination }}`,#}
{#{% endfor -%}#}
{#    child.sku AS variant#}
{#FROM catalog_product_entity AS product#}
{#INNER JOIN catalog_product_super_link AS link#}
{#    ON link.parent_id=product.entity_id#}
{#INNER JOIN catalog_product_entity AS child#}
{#    ON child.entity_id=link.product_id#}
{#{% for axis in axises -%}#}
{#INNER JOIN {{ as_attribute_table(axis) }} AS {{ as_field_alias(axis) }}#}
{#    ON {{ as_field_alias(axis) }}.entity_id = child.entity_id#}
{#{% endfor -%}#}
{#WHERE product.sku IS NOT NULL#}
{#  AND child.sku IS NOT NULL#}
{#  AND product.type_id IN ('configurable');#}