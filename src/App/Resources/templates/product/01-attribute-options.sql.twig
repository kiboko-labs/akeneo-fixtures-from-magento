CREATE TEMPORARY TABLE tmp_options (
    option_id INTEGER NOT NULL,
    code VARCHAR(256) NOT NULL,
    short_code VARCHAR(256) NOT NULL,
    attribute VARCHAR(128) NOT NULL,
    sort_order INTEGER NOT NULL,
    PRIMARY KEY (option_id),
    INDEX (code, attribute),
    INDEX (attribute)
) CHARACTER SET=utf8mb4 COLLATE=utf8mb4_unicode_ci
SELECT
    opt_value_default.option_id,
    {% set codeMapping -%}
    LOWER(opt_value_default.value)
    {%- endset -%}
    {%- for replace in mapping -%}
        {%- set codeMapping -%}
        REPLACE({{ codeMapping }}, '{{ replace.from }}', '{{ replace.to }}')
        {%- endset -%}
    {%- endfor %}
    SUBSTRING(CONCAT(codes.code, '_', {{ codeMapping }}), 1, 100) AS code,
    SUBSTRING({{ codeMapping }}, 1, 99 - LENGTH(codes.code)) AS short_code,
    attribute.attribute_code AS attribute,
    opt.sort_order AS sort_order

FROM (
{%- set renderedAttributes = [] -%}

{%- for code in attributes|keys -%}
    {% set renderedAttribute %}
    SELECT '{{ code }}' AS code
    {%  endset %}

    {%- set renderedAttributes = renderedAttributes|merge([renderedAttribute]) -%}
{%- endfor -%}
    {{ renderedAttributes|join(' UNION ') }}
) AS codes
INNER JOIN eav_attribute AS attribute
    ON codes.code = attribute.attribute_code
INNER JOIN eav_attribute_option AS opt
    ON opt.attribute_id=attribute.attribute_id
INNER JOIN eav_attribute_option_value AS opt_value_default
    ON opt_value_default.option_id=opt.option_id
    AND opt_value_default.store_id=0